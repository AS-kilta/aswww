
== Kansi ==

T-111.4360 WWW-palvelun suunnittelu

Suunnitteluvaihe

Ryhmä 29

Aihe: Automaatio- ja systeemitekniikan killan nettisivut

Tapio Auvinen (tsauvine@cc.hut.fi)
Jaakko Kantojärvi ()
Antti Nieminen ()


== Sisällysluettelo ==

[sivunumerointi mukaan]

--------------------------------------------------------------------------------
 Yleiskuvaus työstä (8 pistettä)
--------------------------------------------------------------------------------

Harjoitustyössä on tavoitteena toteuttaa Automaatio- ja Systeemitekniikan killalle uusi nettisivusto. Sivuston nykyinen versio on osoitteessa http://as.tky.fi/

Uutta sivustoa ryhdyttiin tekemään jo vuonna 2007 Drupal-sisällönhallintajärjestelmällä, mutta sen monikielisyystuki osoittautui riittämättömäksi ja projekti jätettiin kesken. Drupalia viriteltäessä kypsyi ajatus kokonaan oman sisällönhallintajärjestelmän toteuttamisesta, koska tällöin sen saisi alusta asti juuri tarpeitamme vastaavaksi. Kun www-työryhmässä oli sopivasti jäseniä, joiden opintoihin kuuluu www-palvelun suunnittelu ja kevätlukukausi oli sopivasti lähestymässä, projekti päätettiin toteuttaa puhtaalta pöydältä kurssityönä.

Sivusto sisältää muun muassa aktiivikillisteille ajankohtaisia uutisia ja tapahtumakalenterin, ilmoittautumistoiminnon, gallupin ja ulkopuolisille tietoa killasta. Projektin aluperäinen lähtökohta oli, että sivujen päivittämisen täytyy helpottua nykyisestä, joten sivuston täytyy sisältää myös tehokkaat web-pohjaiset ylläpitotyökalut.



== Kohderyhmäanalyysi ==

Tämän kohdan tarkoituksena on määritellä, keille sivustoa ollaan tekemässä sekä miten ja minkälaista aineistoa heille kohdennetaan. Luetelkaa sivuston tärkeimmät kohderyhmät ja kertokaa, minkälaista sisältöä he sivustosta hakevat. Miettikää myös, mikä on käyttäjien motivaatio tulla sivustolle. Kuvatkaa ryhmille tyypilliset sivuston käyttötavat ja -paikat ja erityispiirteet. Huomioikaa että käyttajäryhmallä tarkoitetaan tässä yhteydessä enemman sosiaalista ryhmaa (esim. ylä-asteikäiset tytöt) kuin jonkun sivuston osa-alueen käyttäjää yleisesti (esim. satunnainen vierailija).

Olemme kartoittaneet käyttäjäryhmiä ja käyttötapoja henkilökohtaisen käyttökokemuksen ja epämuodollisten kyselyjen perusteella, ja päätyneet seuraaviin merkittäviin ryhmiin: kiltalaiset, phuksit, abit, sponsorit, ulkopuoliset. Seuraavassa pohditaan näiden ryhmien erityispiirteitä ja käyttötapoja.

* Kiltalaiset *
Sivuston suurin käyttäjäryhmä ovat aktiiviset kiltalaiset. Tyypillisiä käyttötapauksia ovat:
- Webbikameran katsominen
- Tapahtumiin ilmoittautuminen (suora linkki on mainospostissa)
- Tapahtumien ajakohdan katsominen tapahtumakalenterista
- Läpikulku valokuvagalleriaan tai wikiin, jotka ovat erillisiä sivuja
- Hyödyllisen tiedon etsiminen, esimerkiksi tilinumerot, yhteystiedot tai pöytäkirjat

Sivustoa katsotaan tyypillisesti laadukkaalla tietokoneella (ei kännykällä) kotoa tai työpaikalta. Käyttäjillä on tiedossa päämäärä, eivätkä he surffaile sivustolla sattumanvaraisesti. Tiedon täytyy siis olla helposti löydettävissä, eikä viihteellistä sisältöä tarvitse tyrkyttää samalla tavalla kuin sivustoilla, joiden tavoitteena on kerätä rahaa koukuttamalla käyttäjät.

Aktiivikiltalaisten käyttöön liittyvät seuraavat erityispiirteet:
- Webbikamera saatetaan jättää taustalle auki. Sivusto ei siis saa kuormittaa selainta ja sitä kautta tietokonetta turhaan.
- Linkkejä saatetaan lähettää sähköpostitse, eli niiden on näytettävä järkeviltä.
- Sivuja saatetaan bookmarkata (esim. webcam). Urlit eivät saa vaihdella.


* Phuksit *
Phuksit käyttävät sivustoa paljolti samalla tavalla kuin aktiivikiltalaiset, mutta heillä on omia erityistarpeita:
- Opiskelua tukevan tiedon etsiminen opiskelun alkuvaiheessa (kartat, linkit)
- Kiltatoimintaa koskevan tiedon etsiminen (phukseille suunnatut tapahtumat, phuksipisteiden kerääminen)

Käyttäjäryhmässä on myös se erityispiirre, että osa phukseista on vasta potentiaalisia aktiivikiltalaisia. Nettisivujen on annettava kiltatoiminnasta houkutteleva kuva. Esimerkiksi kuvavalinnoilla voidaan luoda positiivista mielikuvaa iloisesta yhdessätekemisestä, ja vastaavasti välttää kielteisiä stereotypioita.


* Abit *
Abit saattavat eksyä killan sivuille etsiessään opiskelupaikkaa. Käyttäjäryhmä on tärkeä, koska oikeantyyppisen opiskelija-aineksen haaliminen laitokselle on myös killan etu. Killan nettisivuilla on myös jonkinlainen siitä, minkälaisen kuvan abit saavat TKK:sta kokonaisuutena. Kuten phuksien tapauksessa, nettisivut voivat hälventää teekkariutta koskeavia stereotypioita ja luoda positiivista yleiskuvaa.

Abit voivat hyvin todennäköisesti printata sivuja kerätessään materiaalia opiskelupaikoista.


* Sponsorit *
Sponsoreilla tarkoitetaan tahoja, joilta kilta anoo rahaa, jotka tulevat killan sivuille tarkistamaan, millaisesta ryhmästä on kysymys. Tämä käyttäjäryhmä on hyvin pieni, mutta erittäin tärkeä, koska kyse on rahasta. Koko sivuston on näytettävä ammattimaiselta ja uskottavalta. Tämä asettaa rajoituksia sivuston ulkoasuun, koska käyttäjäryhmä kuuluu eri ikäluokkaan kuin aiemmin mainitut ryhmät.

Myös sponsorit ovat todennäköisiä printtaajia.


* Ulkopuoliset *
Sivustolle voi eksyä esimerkiksi kiltalaisten vanhempia tai työnantajia, joille on annettava riittävän vakava kuva kiltatoiminnasta. Erityisesti on huolehdittava, että jokainen yksittäinen tunnistettava kiltalainen esiintyy positiivisessa valossa. Tämä vaikuttaa mm. valokuvien valintaan.


* Ylläpitäjät *
Sivustoa ylläpitää lähtökohtaisesti killan tiedottaja. Erityisesti ajankohtaisia uutisia päivitetään usein, joten käytön on oltava riittävän vaivatonta. Lisäksi sekalaiset hallituslaiset voivat päivittää oman vastuualueensa sivuja, joten ylläpitökäyttöliittymän on oltava melko helposti omaksuttavissa.



= Kaavio sivujen rakenteesta =

Piirtäkää dokumenttiin (hierarkinen) kaavio sivuston rakenteesta. Kaavion tarkoituksena on esittää sivuston kokonaisrakenne ja auttaa hahmottamaan yleiskuva palvelusta ja sen osista. Miettikää erityisesti käytettävyyttä: asettukaa edellisessä kohdassa määriteltyjen käyttäjien asemaan ja miettikää, löytyykö heitä kiinnostava sisältö sivustosta helposti ja loogisesti.

Etusivu: uutiset, tapahtumakalenteri, gallup

- Tietoa killasta
  - yleiskuvaus killasta ulkopuolisille
  - hallitus ja toimarit

- Phuksit
  - Opiskelun tuki
  - Phuksiopas
  - Isot
  - Pisteet

- Opiskelu
  - opintomestarin ja neuvojan yhteystiedot
  - linkit osastoihin, labroihin, topiin, tenttiarkistoon, varjikseen

- Arkisto
  - kokousten pöytäkirjat
  - yhteystiedot, tilinumerot, laskupohjat
  - virallisuudet, säännöt

- Webcam

Ulkoiset linkit
  - Kiltalehti
  - Galleria


--------------------------------------------------------------------------------
 Sisältö (8 pistettä)
--------------------------------------------------------------------------------

== Sisältösuunnitelma ==

        * sivun otsikko
        * kuvaus sivusta ja muutamalla lauseella sivulla olevasta sisällöstä/aineistosta
        * kohderyhmät ja sivun kriittisyys ryhmille
        * sivun tavoitteet 

Otsikko:
Sisältö:
Kohderyhmät:
Tavoitteet:
Lähdemateriaali:
Muokkaus:
Dynaamisuus:
Julkaisujärjestys:
Julkaisukielet:


Otsikko: Etusivu
Sisältö: Uutiset, tapahtumakalenteri, gallup
Kohderyhmät: aktiivikillistit (tärkeä)
Tavoitteet: 
Lähdemateriaali: Killan tiedottaja päivittää tapahtumakalenteria ja galluppia, sekä lisää uutisia.
Muokkaus: Tapahtumakalenterille, gallupille ja uutisille on omat ylläpitokäyttöliittymänsä, josta merkintökjä voi lisätä tai poistaa.
Dynaamisuus: Sisältö kootaan dynaamisesti useasta mduulista
Julkaisujärjestys: 
Julkaisukielet: fi/en

Otsikko:
Sisältö:
Kohderyhmät:
Tavoitteet:
Lähdemateriaali:
Muokkaus:
Dynaamisuus:
Julkaisujärjestys:
Julkaisukielet:


Tuotantoprosessi liittyy hyvin läheisesti sisältösuunnitelmaan. Siinä määritellään sivujen tuottaminen, eli aineiston kulku lähdemateriaalista WWW-sivuksi. Sivukohtaisesti määritellään

        * lähdemateriaali
              o mahdollinen nykyinen olomuoto
              o uuden materiaalin tekijä
              o oikeudet materiaalin käyttöön työssä 
        * muokkaus
              o tarvitseeko materiaalia muokata (kuvien muokkaus, tekstin toimittaminen jne.)
              o muokkauksessa tarvittavat työkalut
              o muokkaaja 
        * sisällön dynaamisuus ja aikadimensio, eli onko aineistolla jonkinlainen voimassaoloaika tai milloin se halutaan julkaistavaksi ja milloin se poistetaan.
        * julkaisujärjestys koko sivustoon nähden
        * julkaisukielet


== Ylläpitojärjestelyt ==

Sivusto vaatii myös ylläpitoa. Suunnitelkaa erityisesti, miten usein päivittyvien sivujen päivittäminen tapahtuu (menetelmät, työkalut jne.) sekä minkälaisia ylläpitotyöntekijöitä sivusto toimiessaan vaatii.


--------------------------------------------------------------------------------
Ulkoasu ja käyttöliittymä
--------------------------------------------------------------------------------

== Käyttöliittymä ==

- noin kolmella klikkauksella pääsisi tarvittaessa käsiksi kaikkeen sisältöön
- kaksitasoinen navigaatio
- piirtelen tähän kaavioita


== Graafinen ulkoasu ==

- sivuilla halutaan tuoda esille killan tunnusväriä, violettia
- selkeä, asiallisen oloinen ulkoasu (huomioidaan mahdolliset sivuilla vierailevat sponsorit)
- kannattaisiko tähän laittaa myös aikaisempi versio näkyville?

--------------------------------------------------------------------------------
 Tekniikka (14 pistettä)
--------------------------------------------------------------------------------

Työn keskeisin tavoite on sisällönhallintajärjestelmän toteuttaminen. Vaatimukset ovat tiukat, koska järjestelmä tulee tuotantokäyttöön, ja sen käyttö tunnettujen sisällöntuontojärjestelmien sijasta on pystyttävä perustelemaan. Päädyimme seuraavaan listaan:
- Urlien täytyy olla järkeviä.
- Sivuja täytyy voida lisätä, poistaa ja päivittää web-käyttöliittymän kautta.
- Sivuhierarkiaa täytyy voida muokata dynaamisesti, jotta ylläpitäminen ei vaadi tulevaisuudessa koskemista koodiin.
- Sivuston ulkoasu tulee voida valita vähintään moduulikohtaisesti, ja uusien ulkoasujen käyttöönoton täytyy olla helppoa. Ainakin ilmoittautumistoiminnossa on tarkoitus välittömästi käyttää eri ulkoasua, ja ulkoasut saattavat vaihdella tapahtumakohtaisesti.
- Rakenteen täytyy olla modulaarinen, jotta uusien toimintojen toteuttaminen on helppoa.
- Järjestelmän täytyy tukea monikielisyyttä.
- Järjestelmän täytyy tukea käyttöoikeustasoja.


== Terminologiaa ==

- Skin ja alueet (regions)
Käytämme sivun kokonaisilmeestä nimitystä skin, joka korostaa ulkoasun vaihdeltavuutta. Skin on teknisesti html-pohja, jossa on dynaamisia kenttiä sisällölle. Se sisältää alueita (regions), kuten ylänavipalkki, vasen navipalkki tai sisältöalue, mutta ei ota mitään kantaa niiden sisältöön, vaan sisältö vai vaihdella sivukohatisesti.

- Moduulit
Moduuli on itsenäinen palikka, joka tarjoaa sisälätöä laitettavaksi skinin alueisiin. Esimerkiksi moduuli page tuottaa normaalin staattisen sivun sisällön, mutta on ulkopuolisen tahon asia syöttää sisältö oikeaan alueeseen. Moduulit ovat ikäänkuin pieniä itsenäisiä web-sovelluksia, joiden tuottama sisältö voidaan sijoittaa skinin alueisiin.


== Arkkitehtuuri ==

Sovellus noudataa Model-View-Controller -arkkitehtuuria (MVC), jossa datan esitymuoto (View) erotetaan toimintalogiikasta (Model). Model-taso toimii abstraktilla tasolla, eli voi vaikkapa tuottaa listan johonkin tapahtumaan ilmoittautuneista käyttäjistä, mutta ei ota kantaa esitysmuotoon. View-taso puolestaan voisi muuttaa käyttäjälistan html-taulukoksi, mutta ei sisällä enää monimutkaista toimintalogiikkaa. Controller koordinoi tiedonvälitystä Model- ja View- tasojen välillä, eli pyytää Model-kerrosta suorittamaan tietyt operaatiot, antaa tulokset View-kerrokselle visualisoitavaksi. Vastaavasti Controller hakee käyttäjän syötteen View-kerroksesta ja syöttää sen Model-kerrokseen.

Modulaarisuuden takia toteutetaan kahdessa kerroksessa. Sivuston toimintaa kokonaisuudessaan koordinoi MainController, jonka kauttaa jokainen kysely ohjataan. MainController valitsee skinin, lataa tarvittavat moduulit, pyytää moduuleita tuotamaan sisältöä, ja syöttää sisällön skinin alueisiin. Jokainen moduuli itsessään noudattaa MVC-arkkitehtuuria, eli toimii kuin itsenäinen pieni web-sovellus. MainController esittää pyynnöt moduulin ModuleControllerille, joka pyytää omaa Model-kerrostaan toimimaan, syöttää tulokset haluamalleen näkymälle (View), ja palauttaa valmiin html-sisällön MainControllerille. Komponentit on kuvattu kuvassa X.

[arkkitehtuurikuva]


* MainControllerin toiminta *

MainControllerin vastuulla selvittää, mitä sivua ollaan näyttämässä, mitä skiniä kuuluu käyttää milläkin sivulla, ja minkä moduulin sisältöä kuuluu syöttöää mihinkin alueeseen. Suoritus etenee seuraavasti:
* Käyttäjän kysely ohjataan MainControllerille
* MainController antaa urlin navigointimoduulille ratkaistavaksi.
* Navigointimoduuli lukee tietokannasta sivuhierarkian ja etsii urlia vastaavaan solmun. Solmuun on tallennettu tieto siitä, mikä moduuli tuottaa kyseisen sivun pääsisällön, sekä millä id-numerolla kyseistä moduulia pyydetään hakeamaan sisältöä.
* MainController selvittää, mitä skiniä kyseisen moduulin kanssa käytetään, ja mitä muita moduuleja tarvitaan täyttämään muut alueet.
* MainController lataa tarvittaavt moduulit, ja pyytää niitä tuottamaan html-sisällön, jonka se syöttää skinin alueisiin.
* MainController pyytää skiniä tulostumaan ruudulle.

Esimerkki:
* Käyttäjä pyytää sivua kilta/hallitus
* Navigointimoduuli löytää navigointihierarkiasta kyseisen solmun ja toteaa, että sisällön tuottaa page-moduuli, ja sisältö löytyy id:llä 70.
* Main Controller toteaa, että page-moduulin kanssa käytetään oletusskiniä, pääsisältö tulee alueeseen nimeltä 'content', alueeseen 'topnavi' on pyydettävä navigointimoduulilta sisältöä nimeltä 'topnavi', ja aluesseen 'leftnavi' on pyydettävä navigointimoduulilta sisältöä nimeltä 'navitree'
* MainController pyytää page-moduulilta sisältöä id-numerolla 70, ja navigointimoduulilta topnavi ja navitree -sisällöt, sekä syöttää ne skiniin.
* MainController pyytää skiniä tulostumaan ruudulle.


* Skinin valitseminen *

Tarvitaan tieto siitä, minkä moduulin kanssa käytetään mitäkin skiniä, ja mihin skinin alueisiin laitetaan minkäkin moduulin sisältö. Alustavasti tämä kuvaus on tarkoitus toteuttaa ohjelmoimalla, mutta tarpeen vaatiessa se voitaisiin tallentaa tietokantaan ja toteuttaa käyttöliittymä kuvauksen muokkaamiseen.

Kuvauksen ei tarvitsisi olla moduulista skiniin, vaan se voisi olla sivukohtainen. Sivostoa suunniteltaessa havaittiin kuitenkin, että skinin valinta riippuu aina pääsisällön tuottavasta moduulista. Eri moduulit voivat kuitenkin vaatia eri sisällöt alueisiin. Esimerkiksi webbikameran kanssa navigointipuu korvataan pienillä esikatselukuvilla.
Taulukoissa X ja X on esimerkki siitä, miten skin ja alueiden sisältö päätellään, jos pääsisällön tuottava moduuli on page, webcam tai ilmo (ilmoittautuminen).


moduuli = page | webacm  =>  skin = default

  alue: |  topnavi         | leftnavi          | content
----------------------------------------------------------------
modduli:|                  |                   |
page    | navi->getTopnavi | navi->getLeftnavi | page->getContent(id)
webcam  | navi->getTopnavi | navi->getLeftnavi | cam->getContent


moduuli = ilmo  =>  skin = ilmo->getSkin

  alue: |  topnavi         | content
-------------------------------------------------
modduli:|                  |
ilmo    | ilmo->getTopnavi | ilmo->getContent(id)


* Moduulien toiminta *

Moduulit ovat itsenäisiä, eli ne eivät tiedä mihin alueeseen niiden tuottama sisältö päätyy, tai mitkä muut moduulit tuottavat samaan aikaan sisältöä. Tämä mahdollistaa sen, että koko sivun ulkoasu voidaan vaihtaa, mutta jokainen moduuli toimii omassa lokerossaan kuten ennenkin. Toisaalta moduulien tuottama sisältö voidaan syöttää skinin eri alueisiin ilman, että moduulin itse tarvitsisi tietää siitä mitään.

Suoritus etenee seuraavasti:
* MainControllerin pyynnöt menevät moduulin Controllerille.
* Controller pyytää moduulin Model-kerroksen toimintalogiikkaa tuottamaan sisältöä, lataa sopivan näkymän (View) ja syöttää sisällön näkymälle.
* Controller palauttaa näkymän tuottaman HTML-sisällön takaisin MainControllerille.

Moduuli pitää itse kirjaa tilastaan tilmuuttujissa, joita voidaan tallentaa sessioon, välittää piilokenttinä lomakkeissa tai enkoodata linkkien urleihin. Miten moduulin tila voidaan enkoodata myös muiden moduulien sisältämiin linkkeihin, on ratkaisematta. Ongelma on varmasti ratkaistavissa esimerkiksi ajamalla sivuston renderöinti kahdessa vaiheessa, joista ensimmäisessä moduulien täytyy ilmoittaa tilamuuttujansa globaaliin tietovarastoon, ja toisessa vaiheessa linkit renderöidään käyttäen tätä tietovarastoa apuna.


== Tietokanta ==

* Navigointihierarkia *

Sivustolla on yksi abstrakti, kielestä riippumaton navigointihierarkia. Sivujen otsikot ja polut ladataan toisesta taulusta, joka sisältää kieliversiot. ER-kaavio on esitetty kuvassa X.

[ER-kaavio]


* Käyttöoikeudet *


* Moduulien tietovarastot *


* Object-relational -kuvaus *




== Tietoturva ==

SQL inject

käyttäjätasot



== Palvelinympäristö ==

Järjestelmän toteutuskieleksi on valittu PHP. Kieli ei saa olla liian eksoottinen, koska järjestelmä jää tuotantokäyttöön pitkäksi aikaa. PHP:n versio 5 vaaditaan, koska 4:n olio-ominaisuudet ovat oleellisesti huonommat. Järjestelmä on suunniteltu ajettavaksi Apache 2-palvelimen päällä. Mod_rewrite-laajennus vaaditaan urlien siistimiseen. Tietokannaksi valittiin Postgres avoimuuden takia.


--------------------------------------------------------------------------------
 Projektin suunnittelu (6 pistettä)
--------------------------------------------------------------------------------

== Ryhmäjako ==

Tapio Auvinen
arkkitehtuuri, ohjelmointi

Jaakko Kantojärvi
arkkitehtuuri, ohjelmointi

Antti Nieminen
ulkoasu


== Ajankäyttö ja aikataulu ==

    Esittäkää suunnitelma harjoitustyön aikataulusta. Sen voi tehdä esimerkiksi jakamalla harjoitustyön kulku riittävän tarkasti tehtäviin/työvaiheisiin, kertomalla niiden sisältö ja keskenäinen järjestys, sekä listaamalla jokaisen yksittäisen ryhmäläisen suunniteltu ajankäyttö kuhunkin vaiheeseen. Esittäkää myös henkilö- ja työvaihekohtaisesti suunnitelmavaiheen toteutunut ajankäyttö.

    Huomatkaa, että toteutunutta ajankäyttöä dokumentoidaan seuraavissa dokumenteissa. Aloittakaa siis kirjanpito ajankäytöstä heti kurssin alussa. 
